(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{501:function(t,v,_){"use strict";_.r(v);var a=_(25),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"进程与线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[t._v("#")]),t._v(" 进程与线程")]),t._v(" "),_("h3",{attrs:{id:"一句话解释"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一句话解释"}},[t._v("#")]),t._v(" 一句话解释：")]),t._v(" "),_("p",[t._v("进程就是应用程序创建的实例，而线程依托于进程，它是计算机最小的调度和运行单位")]),t._v(" "),_("p",[t._v("多线程可以并行处理任务，但是线程是不能单独存在的，它是由进程来启动和管理。那么什么又是进程呢？")]),t._v(" "),_("p",[_("strong",[t._v("一个进程就是一个程序的运行实例")]),t._v("。详细解释就是，启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫做进程")]),t._v(" "),_("h3",{attrs:{id:"进程和线程之间的关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程之间的关系"}},[t._v("#")]),t._v(" 进程和线程之间的关系")]),t._v(" "),_("ol",[_("li",[t._v("进程中的任意一线程执行出错，都会导致整个进程的奔溃")]),t._v(" "),_("li",[t._v("线程之间共享进程中的数据")]),t._v(" "),_("li",[t._v("当一个进程关闭之后，操作系统会回收进程所占用的内存")]),t._v(" "),_("li",[t._v("进程之间的内容相互隔离")])]),t._v(" "),_("p",[t._v("打个比方，QQ是应用程序，你启动QQ，就是在操作系统中创建了一个进程。QQ架构里有很多线程，不同线程处理不同的事情，")]),t._v(" "),_("p",[t._v("你启动一个QQ，就是创建一个进程，再启动一个就是再创建进程")]),t._v(" "),_("p",[t._v("CPU就像一个工厂，进程就像一个车间，线程就好比车间里的工作。一个进程可以包含多个线程")])])}),[],!1,null,null,null);v.default=s.exports}}]);