(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{801:function(t,r,a){"use strict";a.r(r);var e=a(25),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript高级程序编程第四版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript高级程序编程第四版"}},[t._v("#")]),t._v(" JavaScript高级程序编程第四版")]),t._v(" "),a("h3",{attrs:{id:"第八章-对象、类和面向对象编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第八章-对象、类和面向对象编程"}},[t._v("#")]),t._v(" 第八章 对象、类和面向对象编程")]),t._v(" "),a("ul",[a("li",[t._v("每个函数都会创建一个 prototype 属性，这个属性是一个对象，包含应该由特定引用类型的实例共享的属性和方法")]),t._v(" "),a("li",[t._v("无论何时，只要创建一个函数，就会按照特定的规则为这个函数创建一个 prototype 属性（指向原型对象）。默认情况下，所有原型对象自动获得一个名为 constructor 的属性，指回与之关联的构造函数")]),t._v(" "),a("li",[t._v("理解：是个函数就有 prototype，原型对象 === 这个函数的 prototype")])])])}),[],!1,null,null,null);r.default=s.exports}}]);