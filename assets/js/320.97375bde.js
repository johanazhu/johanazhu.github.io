(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{782:function(t,e,a){"use strict";a.r(e);var s=a(25),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react原理解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react原理解析"}},[t._v("#")]),t._v(" React原理解析")]),t._v(" "),a("p",[t._v("知识点")]),t._v(" "),a("p",[t._v("​\t虚拟dom")]),t._v(" "),a("p",[t._v("​\tJSX")]),t._v(" "),a("p",[t._v("​\tReact核心api")]),t._v(" "),a("p",[t._v("​\tReactDOM")]),t._v(" "),a("p",[t._v("​\t\trender()")]),t._v(" "),a("p",[t._v("​\t实现React.createElement，ReactDom.render，Component")]),t._v(" "),a("p",[t._v("​\t\tCreateElement")]),t._v(" "),a("p",[t._v("​\t\tReactDOM.render")]),t._v(" "),a("p",[t._v("生命周期怎么实现")]),t._v(" "),a("p",[t._v("setState的过程")]),t._v(" "),a("h1",{attrs:{id:"jsx和虚拟dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx和虚拟dom"}},[t._v("#")]),t._v(" JSX和虚拟DOM")]),t._v(" "),a("p",[t._v("问题：")]),t._v(" "),a("p",[a("strong",[t._v("在定义React组件或者书写React相关代码，不管代码中有没有用到React这个对象，我们都必须将其import进来，这是为什么？")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ReactDOM "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("因为React将 App 解析成 vnode")]),t._v(" "),a("p",[t._v("ReactDOM的作用就是将用jsx写成的对象映射到真实的DOM上，引入 React，自然能解析 "),a("code",[t._v("<App />")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("jsx转换成abstract dom tree的时候，需要 "),a("code",[t._v("React.createElement")]),t._v("，引入React，因为babel的缘故，自动转换为 抽象语法树对象")]),t._v(" "),a("h2",{attrs:{id:"组件和声明周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件和声明周期"}},[t._v("#")]),t._v(" 组件和声明周期")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function Welcome(props) {\n    return <h1>Hello, {props.name}</h1>;\n}\n")])])]),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/04/19/V9e5gtmZcUkojnS.png",alt:"image-20210419171455659"}})]),t._v(" "),a("p",[t._v("当对象的type属性是字符串时，表示为普通html标签，当type为函数时，它被当做构造函数，props属性被传入这个构造函数，生成实例，再调用实例的render方法，render方法返回的数据结构才用以渲染。")]),t._v(" "),a("p",[t._v("前言：")]),t._v(" "),a("p",[t._v("React是什么？")]),t._v(" "),a("p",[t._v("React 是一个库，它主要做的事情，就是管理试图UI，")]),t._v(" "),a("p",[t._v("写法：你可以按照 jsx 写法，也可以按照 React.createElement() 来写代码")]),t._v(" "),a("p",[t._v("第一章：JSX与transform-react-jsx")]),t._v(" "),a("p",[t._v("https://zh-hans.reactjs.org/")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class HelloMessage extends React.Component {\n  render() {\n    return (\n      <div>\n        Hello {this.props.name}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" />,\n  document.getElementById('hello-example')\n);\n")])])]),a("p",[t._v("如果不加 JSX 的话，同样的意思")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class HelloMessage extends React.Component {\n  render() {\n    return React.createElement(\n      "div",\n      null,\n      "Hello ",\n      this.props.name\n    );\n  }\n}\n\nReactDOM.render(React.createElement(HelloMessage, { name: "Taylor" }), document.getElementById(\'hello-example\'));\n')])])]),a("p",[t._v("所以抽象语法树，会讲你写的代码转换成 （“div”, null, 'Hello', this.props.name），即 type，props，多个children，当然你可以以其他形式来")]),t._v(" "),a("p",[t._v("我们知道Babel是将ES6语法转移成ES5，那Babel是怎么转换的呢，就是运用了抽象语法树，具体可以看看这篇文章：抽象语法树")]),t._v(" "),a("p",[t._v("似乎我们只要引入"),a("code",[t._v("@babel/plugin-transform-react-jsx")]),t._v("，就能运行React")]),t._v(" "),a("p",[t._v("那为什么是 （type），属性（props），多个子节点（children）")]),t._v(" "),a("p",[t._v("React")]),t._v(" "),a("p",[t._v("有兴趣可以看看它的"),a("a",{attrs:{href:"https://github.com/babel/babel/blob/main/packages/babel-plugin-transform-react-jsx/src/create-plugin.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("每个 JSX 元素只是调用 "),a("code",[t._v("React.createElement(component, props, ...children)")]),t._v(" 的语法糖")]),t._v(" "),a("p",[t._v("所以我们如果要做React.createElement，就按照这种形式来写，至于为什么是 type，props，...children。我想一个 jsx 只需要这三个属性就可以覆盖，标签名，标签中的属性，父标签下的子标签，一直递归下去，知道空")]),t._v(" "),a("p",[t._v("我们先来看一个例子：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" world"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("children")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'props'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'children'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 源码中，是会输出 $$typeof,key,ref,props,children,_owner,_self,_source 等等")]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("children")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        children\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们已经知道React.createElement 相当于创建了一个对象（也就是虚拟dom），如果我们要在页面上看到所写的代码，就需要把这个对象映射成HTML，然后插入到document（文档）中。")]),t._v(" "),a("p",[t._v("这里有两个步骤，")]),t._v(" "),a("p",[t._v("一是vnode（即虚拟dom，以下简写成vnode）与真实dom的映射")]),t._v(" "),a("p",[t._v("二将真实dom插入到页面中")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function render(vnode, container) {\n    // 第一步：创建真实dom vnode -> node\n\tconst node = createNode(vnode)\n    // 第二步：将 node 插入 container\n    return container.appendChild(node)\n}\n\nfunction createNode(vnode) {\n    ...\n}\n")])])]),a("p",[t._v("PS：ReactDOM.render(element, container[, callback])，是有 callback 参数，这里先不实现")]),t._v(" "),a("p",[t._v("关键一部是 createNode 函数，我们先来看看 vnode 的结构")]),t._v(" "),a("p",[t._v("div,")]),t._v(" "),a("p",[t._v("是"),a("code",[t._v('<div class="blue">hello,world</div>')])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归children")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在节点上赋上属性")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 children 遍历，转成真实 dom 节点，再插入 node 中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildren")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nodeChildren"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("疑惑：")]),t._v(" "),a("p",[t._v("react到底是什么")]),t._v(" "),a("p",[t._v("为什么用jsx写react，或者说写组件有哪些方法")]),t._v(" "),a("p",[t._v("简述下React 的生命周期？每个生命周期都做了什么？")]),t._v(" "),a("p",[t._v("setState是异步的，怎么实现")]),t._v(" "),a("p",[t._v("fiber是什么，它解决了什么（为什么用fiber代替之前的框架），优势是什么")]),t._v(" "),a("p",[t._v("事件合成怎么做的，因为react中有几万行代码是针对事件的")]),t._v(" "),a("p",[t._v("hooks 是什么，解决了什么问题，写法，各种hooks的作用和用法")]),t._v(" "),a("p",[t._v("react如何做优化")]),t._v(" "),a("p",[t._v("为什么说 immutable 是 React 的核心？（知乎问题）")]),t._v(" "),a("p",[t._v("为什么要setState，而不是直接this.state.xx == oo？")]),t._v(" "),a("p",[t._v("什么是虚拟dom？")]),t._v(" "),a("p",[t._v("怎么做diff？")]),t._v(" "),a("p",[t._v("react到底是什么")]),t._v(" "),a("p",[t._v("​\tUI库..，facebook出品，")]),t._v(" "),a("p",[t._v("​\t为什么会出来")]),t._v(" "),a("p",[t._v("​\t\t页面越来越重，频繁操作真实dom页面会变卡，变慢，而且页面不好组织。所以就有了一些框架，其中最好的是react和vue，其目的是")]),t._v(" "),a("p",[t._v("为什么用jsx写react，或者说写组件有哪些方法")]),t._v(" "),a("p",[t._v("​\t开创，写起来舒服")]),t._v(" "),a("p",[t._v("​\treact.createElement")]),t._v(" "),a("p",[t._v("​\t类组件 "),a("code",[t._v("<Welcome>")])]),t._v(" "),a("p",[t._v("​\t函数组件"),a("code",[t._v("const jsx = <div></div>")])]),t._v(" "),a("p",[t._v("​\tjsx会转换为react.createElement")]),t._v(" "),a("p",[t._v("react 的源头是 react.createElement，生产虚拟dom")]),t._v(" "),a("p",[t._v("组件：")]),t._v(" "),a("p",[t._v("当我们自己的组件继承 Component 的时候，我们的组件会继承一些属性，这些属性简单的来说就是"),a("strong",[t._v("自更新能力")])]),t._v(" "),a("p",[t._v("当我们调用 this.setState() 的时候，组件就会自动的重新渲染自己，然后通过新的虚拟节点去对比旧节点来进行变更")]),t._v(" "),a("p",[t._v("component.render()")]),t._v(" "),a("p",[t._v("得到 vnode")]),t._v(" "),a("p",[t._v("setState为什么要做成异步的？原因是什么？")]),t._v(" "),a("p",[t._v("为了性能，不能每次setState 的时候都触发更新，所以要异步")]),t._v(" "),a("p",[t._v("setState是一个队列")]),t._v(" "),a("p",[t._v("利用事件队列，让flush 在所有同步任务后执行")]),t._v(" "),a("p",[t._v("https://github.com/facebook/react/issues/11527")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/facebook/react/issues/11527#",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFClarification: why is "),a("code",[t._v("setState")]),t._v(" asynchronous?"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("为什么要设计成异步的")]),t._v(" "),a("p",[t._v("批处理")]),t._v(" "),a("p",[t._v("为什么要setState，而不是直接this.state.xx == oo？")]),t._v(" "),a("p",[t._v("​\t因为react没有像vue那样对数据进行劫持，如果用this.state.xx == oo，react并不知道是数据改变了，所以必须使用setState来告诉react数据已经发生改变")]),t._v(" "),a("p",[t._v("React hooks 和 Class Component 的性能哪一个更好？")]),t._v(" "),a("p",[t._v("一样，都是走相同的 diff 算法")]),t._v(" "),a("p",[t._v("craeteElement 生成虚拟dom？")]),t._v(" "),a("p",[t._v("JSX ——babel —— React.createElement('div', {}, ...children)——return——VDOM——ReactDOM.render——DOM")]),t._v(" "),a("p",[t._v("先生成虚拟DOM,在把虚拟DOM映射到DOM上，也就是渲染")]),t._v(" "),a("p",[t._v("好文：Deep In React之浅谈 React Fiber 架构(一)")]),t._v(" "),a("p",[t._v("https://mp.weixin.qq.com/s?__biz=MzI1ODk2Mjk0Nw==&mid=2247484469&idx=1&sn=f68d044f1b0e4e2eb981e3878427b75b&scene=21#wechat_redirect")]),t._v(" "),a("p",[t._v("React 核心思想：")]),t._v(" "),a("p",[t._v("内存中维护一颗虚拟DOM树，数据变化时（setState），自动更新虚拟 DOM，得到一颗新树，然后 Diff 新老虚拟 DOM 树，找到有变化的部分（diff算法），得到一个 Change（Patch），将这个 Patch 加入队列，最终批量更新这些 Patch 到 DOM 中")]),t._v(" "),a("p",[t._v("Fiber时为了解决原先架构中的卡顿问题——任务一旦执行，就无法中断，js 线程一直占用主线程，导致卡顿")]),t._v(" "),a("p",[t._v("render 阶段可以理解为就是 Diff 的过程")]),t._v(" "),a("p",[t._v("React Fiber 首先时将虚拟DOM树转化为 Fiber tree，因此每个节点都有 child、subling、return 属性，遍历 Fiber tree 时采用的是后续遍历方法（深度优先）：")]),t._v(" "),a("ol",[a("li",[t._v("从顶点开始遍历")]),t._v(" "),a("li",[t._v("如果有大儿子，先遍历大儿子；如果没有大儿子，则标识遍历完成")]),t._v(" "),a("li",[t._v("大儿子\n"),a("ol",[a("li",[t._v("如果有弟弟，则返回弟弟，跳到2")]),t._v(" "),a("li",[t._v("如果没有弟弟，则返回父节点，并标志完成父节点遍历，跳回2")]),t._v(" "),a("li",[t._v("如果没有父节点则标志遍历结束")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/04/28/1mv4WjqrDNKsXPC.png",alt:"image-20210428100332140"}})]),t._v(" "),a("p",[t._v("React 抽象来说，就是一个公式")]),t._v(" "),a("p",[t._v("UI=f(state)")]),t._v(" "),a("p",[t._v("我们把最终绘制出来的**"),a("em",[t._v("UI*"),a("strong",[t._v("当做一个函数")]),a("em",[t._v("f*"),a("em",[a("em",[t._v("运行的结果，***f*"),a("strong",[t._v("就是React和我们基于React写得代码，而")])]),t._v("f*"),a("strong",[t._v("的输入参数就是")])]),t._v("state*")])]),t._v("。")]),t._v(" "),a("p",[t._v("https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5NzkwNDk3MQ==&action=getalbum&album_id=1355691950980317186&scene=173&from_msgid=2650591628&from_itemidx=1&count=3&nolastread=1#wechat_redirect")])])}),[],!1,null,null,null);e.default=n.exports}}]);