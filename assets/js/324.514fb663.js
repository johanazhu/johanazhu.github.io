(window.webpackJsonp=window.webpackJsonp||[]).push([[324],{781:function(t,a,e){"use strict";e.r(a);var r=e(25),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"immutable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#immutable"}},[t._v("#")]),t._v(" Immutable")]),t._v(" "),e("h2",{attrs:{id:"_1-什么是-immutable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-immutable"}},[t._v("#")]),t._v(" 1. 什么是 Immutable ？")]),t._v(" "),e("p",[t._v("Immutable Data 就是一旦创建，就不能再被更改的数据。对 Immutable 对象的任何修改或添加删除操作都会返回一个新的 Immutable 对象。主要原理是采用了 Persistent Data Structure（持久化数据结构)，就是当每次修改后我们都会得到一个新的版本，且旧版本可以完好保留，也就是使用旧数据创建新数据时，要保证旧数据同时可用且不变。同时为了避免 deepCopy 把所有节点都复制一遍带来的性能损耗，Immutable 使用了 Structural Sharing（结构共享），就是对于本次操作没有修改的部分，我们可以直接把相应的旧的节点拷贝过去，这其实就是结构共享。")]),t._v(" "),e("h2",{attrs:{id:"为什么要不可变"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么要不可变"}},[t._v("#")]),t._v(" 为什么要不可变")]),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/8-xfY45DLqKDKAhvP16sUw",target:"_blank",rel:"noopener noreferrer"}},[t._v("15 分钟学会 Immutable"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/APqvWcqhT5GSYsho_-sEtA",target:"_blank",rel:"noopener noreferrer"}},[t._v("不能修葺的房子"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);