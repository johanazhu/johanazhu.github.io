(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{550:function(e,r,v){"use strict";v.r(r);var _=v(25),o=Object(_.a)({},(function(){var e=this,r=e.$createElement,v=e._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"docker-常见命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#docker-常见命令"}},[e._v("#")]),e._v(" docker 常见命令")]),e._v(" "),v("h2",{attrs:{id:"常见命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见命令"}},[e._v("#")]),e._v(" 常见命令")]),e._v(" "),v("p",[v("code",[e._v("docker version")]),e._v("      查看 "),v("code",[e._v("Docker")]),e._v(" 客户端和服务端的信息")]),e._v(" "),v("p",[v("code",[e._v("docker --version")]),e._v("  \t只查看版本")]),e._v(" "),v("p",[v("code",[e._v("docker images")]),e._v("\t\t查看所有的镜像（"),v("code",[e._v("image")]),e._v("）")]),e._v(" "),v("p",[v("code",[e._v("docker images")]),e._v(" === "),v("code",[e._v("docker image ls")])]),e._v(" "),v("p",[v("code",[e._v("docker ps -a")]),e._v(" \t\t查看所有启动过的容器（"),v("code",[e._v("container")]),e._v("）")]),e._v(" "),v("p",[v("code",[e._v("docker container ls")]),e._v(" \t查看所有"),v("strong",[e._v("正启动")]),e._v("的容器（"),v("code",[e._v("container")]),e._v("）")]),e._v(" "),v("p",[v("code",[e._v("docker help")]),e._v(" 帮助")]),e._v(" "),v("p",[e._v("​\t"),v("code",[e._v("docker image help")]),e._v(" image 的帮助")]),e._v(" "),v("p",[e._v("​\t"),v("code",[e._v("docker container help")]),e._v(" container 的帮助")]),e._v(" "),v("p",[v("code",[e._v("docker commit")]),e._v(" 生成一个镜像（image）")]),e._v(" "),v("p",[v("code",[e._v("docker port 容器名")]),e._v(" 查看容器")]),e._v(" "),v("h2",{attrs:{id:"运行容器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运行容器"}},[e._v("#")]),e._v(" 运行容器")]),e._v(" "),v("p",[e._v("根据镜像生成容器：")]),e._v(" "),v("p",[v("code",[e._v("docker run -it --name express_demo -p 3000:3000 express_server:v1.0.1 /bin/bash")])]),e._v(" "),v("p",[e._v("参数说明：")]),e._v(" "),v("ul",[v("li",[e._v("-i：以交互模式运行容器，通常与 "),v("strong",[e._v("-t")]),e._v(" 同时使用")]),e._v(" "),v("li",[e._v("-t：为容器重新分配一个伪输入终端，通常与 "),v("strong",[e._v("-i")]),e._v(" 同时使用")]),e._v(" "),v("li",[e._v("--name    给这个容器起名字")]),e._v(" "),v("li",[e._v("-p     端口映射，本机端口（启动容器的宿主机）：镜像端口")]),e._v(" "),v("li",[e._v("-d     后台运行（"),v("code",[e._v("docker run -d -p 8000:80 nginx")]),e._v("）")]),e._v(" "),v("li",[e._v("-v     数据卷("),v("code",[e._v("docker run -d -v /home/johan/www/express_server:/www/express_server")]),e._v(")")])]),e._v(" "),v("p",[e._v("一般我会安装 -it --name -p 的写法，把根据那个镜像启动放在最后面")]),e._v(" "),v("p",[v("code",[e._v("docker run -it --name express_demo -p 3000:3000 express_server:v1.0.1 /bin/bash")])]),e._v(" "),v("p",[e._v("以上的代码翻译成白话文就是：")]),e._v(" "),v("p",[e._v("根据express_server:v1.0.1 版本的镜像启动一个名字叫express_demo 端口为3000的容器并进入容器内，注意本机端口对应镜像中的3000端口")]),e._v(" "),v("h2",{attrs:{id:"拉取"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#拉取"}},[e._v("#")]),e._v(" 拉取")]),e._v(" "),v("p",[e._v("拉取镜像：")]),e._v(" "),v("p",[v("code",[e._v("docker pull 发布者名字(可有可无)/镜像名:版本名")])]),e._v(" "),v("ul",[v("li",[e._v("docker pull node")]),e._v(" "),v("li",[e._v("docker pull johanbo/docker_express_server:tagname")])]),e._v(" "),v("h2",{attrs:{id:"构建"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[e._v("#")]),e._v(" 构建")]),e._v(" "),v("h3",{attrs:{id:"通过-dockerfile-构建-常见"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通过-dockerfile-构建-常见"}},[e._v("#")]),e._v(" 通过 dockerfile 构建（常见）")]),e._v(" "),v("p",[v("code",[e._v("docker build . -t express_server:V1.0.0")]),e._v(" \t构建容器")]),e._v(" "),v("ul",[v("li",[e._v("-t：给这个包起名字")]),e._v(" "),v("li",[e._v("：之后为版本号")])]),e._v(" "),v("p",[e._v("即 docker 打包当前目录（.），当前目录下有dockerfile，才能使用")]),e._v(" "),v("p",[v("code",[e._v("docker exec -it xxxx /bin/bash")]),e._v("\t进入正在运行的容器")]),e._v(" "),v("ul",[v("li",[e._v("xxxx：为容器名，id和名字都可以进入")])]),e._v(" "),v("h3",{attrs:{id:"通过-commit-构建"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通过-commit-构建"}},[e._v("#")]),e._v(" 通过 commit 构建")]),e._v(" "),v("p",[v("code",[e._v("docker commit <原修改后容器ID> <新容器名称>")])]),e._v(" "),v("h2",{attrs:{id:"生产"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生产"}},[e._v("#")]),e._v(" 生产")]),e._v(" "),v("p",[e._v("打包镜像：")]),e._v(" "),v("p",[v("code",[e._v("docker save express_server:v1.0.0 > express_server.tar")])]),e._v(" "),v("p",[v("code",[e._v("docker save –o ubuntu_node.jar ubuntu_node")])]),e._v(" "),v("p",[e._v("导入镜像： "),v("code",[e._v("docker load < express_server.tar")])]),e._v(" "),v("h2",{attrs:{id:"删除"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[e._v("#")]),e._v(" 删除")]),e._v(" "),v("p",[e._v("删除镜像："),v("code",[e._v("docker rmi image名")])]),e._v(" "),v("p",[e._v("删除容器："),v("code",[e._v("docker rm 168d445a98a3")])]),e._v(" "),v("h2",{attrs:{id:"容器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[e._v("#")]),e._v(" 容器")]),e._v(" "),v("p",[e._v("停止容器："),v("code",[e._v("docker stop xx")])]),e._v(" "),v("p",[e._v("运行已经停止的容器："),v("code",[e._v("docker start xx")])]),e._v(" "),v("p",[e._v("直接关闭容器："),v("code",[e._v("docker kill xx")])]),e._v(" "),v("ul",[v("li",[e._v("其中 xx 都为容器名")])]),e._v(" "),v("p",[e._v("进入还在运行的容器")]),e._v(" "),v("p",[e._v("安装和常用CLI：\n添加阿里云镜像：sudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n安装命令：sudo yum install -y  docker-ce docker-ce-cli containerd.io\n启动命令：sudo systemctl start docker\n添加当前用户到docker用户组：sudo usermod -aG docker $USER （需注销），newgrp docker （立即生效）\nHelloworld：docker run hello-world  （本地没有镜像的话会自动从远端仓库pull）\npull nginx 镜像：docker pull nginx（等效于nginx:latest）\n运行：docker run -【d】（后台运行不阻塞shell） 【-p 80:80】（指定容器端口映射，内部：外部） nginx\n查看正在运行：docker ps\n删除容器：docker rm -f container id(不用打全，前缀区分)\n进入bash：docker exec -it container id(不用打全，前缀区分) bash\ncommit镜像：docker commit container id(不用打全，前缀区分)  name\n查看镜像列表：docker images （刚才commit的镜像）\n使用运行刚才commit的镜像：docker run -d name\n使用Dockerfile构建镜像：docker build -t name 存放Dockerfile的文件夹\n删除镜像：docker rmi name\n保存为tar：docker save name  tar name\n从tar加载：docker load  tar name")]),e._v(" "),v("p",[e._v("一些启动参数：\n后台运行容器：-d\n容器内外端口映射：-p 内部端口号:外部端口号\n目录映射：-v dir name : dir\n指定映像版本：name:ver")])])}),[],!1,null,null,null);r.default=o.exports}}]);