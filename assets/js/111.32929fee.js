(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{555:function(t,s,e){"use strict";e.r(s);var a=e(25),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"实战-构建自己的镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实战-构建自己的镜像"}},[t._v("#")]),t._v(" 实战：构建自己的镜像")]),t._v(" "),e("p",[t._v("构建镜像有两种，一种是在命令行中实现，一种通过dockerfile实现")]),t._v(" "),e("p",[t._v("这里，我们以ubuntu为例，构建自己的镜像")]),t._v(" "),e("h2",{attrs:{id:"命令行中实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令行中实现"}},[t._v("#")]),t._v(" 命令行中实现")]),t._v(" "),e("p",[t._v("思路：")]),t._v(" "),e("p",[t._v("第一步：进入容器")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker run -it --name ubuntu_node_johanbo ubuntu:latest /bin/bash\n")])])]),e("p",[t._v("解释：以 "),e("code",[t._v("ubuntu:latest")]),t._v(" 为镜像构建名字为 ubuntu_node_johanbo 的容器，并进入容器中")]),t._v(" "),e("p",[t._v("第二步：在容器中安装 nodejs, npm 和 pm2")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y nodejs "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pm2 -g\n")])])]),e("p",[t._v("第三步：退出容器")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("按住 Ctrl + p + q\n")])])]),e("p",[t._v("第四步： 将修改后的容器打包为镜像")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" 查看正在运行的容器，找到刚刚启动的容器Id\ndocker commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("容器ID"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("自定义的镜像名"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ndocker images 查看镜像\n")])])]),e("p",[t._v("此时，我们的镜像已经生成了。这个镜像中以ubuntu为底层，并安装了node，npm和pm2等包。如果你愿意，可以通过命令"),e("code",[t._v("docker push <自定义镜像名>")]),t._v(" 推送至远端仓库")]),t._v(" "),e("p",[t._v("但这种方法，你需要在容器中做多次操作，一不小心也许就有出错。所以，大多数情况下，推荐第二种，使用 dockerfile 来规范你的镜像")]),t._v(" "),e("h2",{attrs:{id:"dockerfile-构建镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-构建镜像"}},[t._v("#")]),t._v(" dockerfile 构建镜像")]),t._v(" "),e("p",[t._v("第一步：编写 dockerfile")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于Ubuntu image")]),t._v("\nFROM daocloud.io/library/ubuntu:latest\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# MAINTAINER")]),t._v("\nLABEL "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("by")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"johan"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置时区")]),t._v("\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo 'Asia/Shanghai' > /etc/timezone\"")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" dpkg-reconfigure -f noninteractive tzdata\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更换 Ubuntu 镜像")]),t._v("\nRUN "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\\n\\\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\\n\\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\\n\\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\\n\\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\\n\\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\\n\\\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\\n'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/apt/sources.list\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装Node.js与NPM")]),t._v("\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" -y "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nodejs "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v("\n\n")])])]),e("p",[t._v("第二步：构建镜像")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker build "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" -t ubuntu_node_johan:v1.0\n")])])]),e("p",[t._v("完")]),t._v(" "),e("p",[t._v("以上两种为构建镜像的两种方式")])])}),[],!1,null,null,null);s.default=n.exports}}]);