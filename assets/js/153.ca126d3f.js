(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{601:function(t,a,s){"use strict";s.r(a);var e=s(25),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"restful"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restful"}},[t._v("#")]),t._v(" RESTful")]),t._v(" "),s("h2",{attrs:{id:"restful-api-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restful-api-是什么"}},[t._v("#")]),t._v(" RESTful API  是什么？")]),t._v(" "),s("h3",{attrs:{id:"什么是-rest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-rest"}},[t._v("#")]),t._v(" 什么是 REST")]),t._v(" "),s("p",[t._v("REST 的全称是 Representational state transfer")]),t._v(" "),s("ul",[s("li",[t._v("Representational：数据的表现形式（JSON、XML...）")]),t._v(" "),s("li",[t._v("state：当前状态或者数据")]),t._v(" "),s("li",[t._v("transfer：数据传输")])]),t._v(" "),s("p",[t._v("它描述了一个系统如何与另一个交流。比如一个产品的状态（名字，详情）表现为 XML，JSON 或者普通文本")]),t._v(" "),s("p",[t._v("REST 有六个约束：")]),t._v(" "),s("ul",[s("li",[t._v("Client—Server（客户端——服务器端）")]),t._v(" "),s("li",[t._v("Stateless（无状态）")]),t._v(" "),s("li",[t._v("Cache（缓存）")]),t._v(" "),s("li",[t._v("Uniform Interface（统一接口）")]),t._v(" "),s("li",[t._v("Layered System（分层系统）")]),t._v(" "),s("li",[t._v("Code-On-Demand（按需代码）")])]),t._v(" "),s("h3",{attrs:{id:"最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),s("h4",{attrs:{id:"请求设计规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求设计规范"}},[t._v("#")]),t._v(" 请求设计规范")]),t._v(" "),s("ul",[s("li",[t._v("URI 使用名词，尽力使用复数，如 /users")]),t._v(" "),s("li",[t._v("URI 使用 嵌套 表示 关联关系，如 /users/123/repos/234")]),t._v(" "),s("li",[t._v("使用 正确的 HTTP 方式，如 GET/POST/PUT/DELETE")])]),t._v(" "),s("h4",{attrs:{id:"相应设计规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相应设计规范"}},[t._v("#")]),t._v(" 相应设计规范")]),t._v(" "),s("ul",[s("li",[t._v("查询")]),t._v(" "),s("li",[t._v("分页")]),t._v(" "),s("li",[t._v("字段过滤")])]),t._v(" "),s("p",[t._v("如果记录数量很多，服务器不可能都将它们返回给用户。API 应该提供参数，过滤返回结果。如以下代码参考：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("?limit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":指定返回记录的数量\n?offest"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":指定返回记录的开始位置\n?page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("pre_page")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(":指定第几页，以及每页的记录数\n?sortby"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("asc:指定返回结果按照哪个属性排序，以及排序顺序\n?animal_type_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":指定筛选条件\n")])])]),s("ul",[s("li",[t._v("状态码")]),t._v(" "),s("li",[t._v("错误处理")])]),t._v(" "),s("p",[t._v("就像 HTML 的错误页面向访问者展示了有用的错误消息一样，API 也应该用之前清晰易读的格式来提供有用的错误消息")])])}),[],!1,null,null,null);a.default=r.exports}}]);