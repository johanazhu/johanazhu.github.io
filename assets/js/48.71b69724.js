(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{483:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器的渲染原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的渲染原理"}},[t._v("#")]),t._v(" 浏览器的渲染原理")]),t._v(" "),s("h2",{attrs:{id:"浏览器工作大致流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器工作大致流程"}},[t._v("#")]),t._v(" 浏览器工作大致流程")]),t._v(" "),s("p",[t._v("先上一张图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/06/03/zEAmsLgQ3tXu89P.jpg",alt:"浏览器渲染大致流程"}})]),t._v(" "),s("p",[t._v("从图中我们可以知道：")]),t._v(" "),s("ol",[s("li",[t._v("浏览器会解析三个东西：\n"),s("ol",[s("li",[t._v("一个是HTML/SVG/XHTML，事实上，webkit 有三个 C++ 的类对应这三类文档。解析这三种文件产生一个 DOM Tree。")]),t._v(" "),s("li",[t._v("CSS，解析 CSS 会产生 CSS 规则树")]),t._v(" "),s("li",[t._v("JavaScript，脚本，主要是通过 DOM API 和 CSSOM API 来操作 DOM Tree 和 CSS Rule Tree")])])]),t._v(" "),s("li",[t._v("解析完成后，浏览器引擎会通过 DOM Tree 和 CSS Rule Tree 来构造 Rendering Tree，注意：\n"),s("ol",[s("li",[t._v("Rendering Tree 渲染树并不等同于 DOM 树，因为一些像 Header 或 display:none 的东西就没必要放在渲染树上")]),t._v(" "),s("li",[t._v("CSS 的 Rule Tree 主要是为了完成匹配并把 CSS Rule 附加上 Rendering Tree 上的每个 Element。也就是DOM节点。也就是所谓的 Frame。")]),t._v(" "),s("li",[t._v("然后，计算每个 Frame（也就是每个Element）的位置，这又叫 layout 和 reflow（回流）过程")])])]),t._v(" "),s("li",[t._v("最后通过调用操作系统 Native GUI 的 API 绘制")])]),t._v(" "),s("h2",{attrs:{id:"dom解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom解析"}},[t._v("#")]),t._v(" DOM解析")]),t._v(" "),s("p",[t._v("HTML 的 DOM Tree 解析如下：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Web page parsing"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Web page parsing"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is an example Web page."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("上面这段HTML会解析成这样：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/06/03/km1FEpcSAJOl9xf.jpg",alt:"DOM-Tree-01"}})]),t._v(" "),s("p",[t._v("下面是另一个有SVG标签的情况：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/06/03/wxiaKertykuEYl3.jpg",alt:"DOM-Tree-02"}})]),t._v(" "),s("h2",{attrs:{id:"css解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css解析"}},[t._v("#")]),t._v(" CSS解析")]),t._v(" "),s("p",[t._v("CSS的解析大概是下面这个样子（下面是Firefox的玩法），假设我们有下面的HTML文档：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("doc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A few quotes"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("para")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("emph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      Franklin said that "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("quote")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('"A penny saved is a penny earned."'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("quote")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("para")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("para")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      FDR said\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("quote")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('"We have nothing to fear but \n        \t'),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("emph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("fear itself."),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('"\n        '),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("quote")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("para")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("doc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("于是 DOM Tree 是这个样子：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/06/03/amq93DJLexcyjQM.jpg",alt:"DOM-Tree-Example"}})]),t._v(" "),s("p",[t._v("然后我们的CSS文档是这样的：")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rule 1 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("doc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-indent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1em"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rule 2 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("title")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3em"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rule 3 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("para")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rule 4 */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('[class="emph"]')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" italic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("于是我们的CSS Rule Tree 会是这个样子：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/06/03/tA2lqIs41EUTaze.jpg",alt:"CSS-Rule-Tree-Example"}})]),t._v(" "),s("p",[t._v("途中的第四条规则出现了两次，一次是独立的，一次是在规则3的子节点。所以，我们可以知道，建立CSS Rule Tree 是需要比照着 DOM Tree 来着。CSS 匹配 DOM Tree 主要是从右到左解析 CSS 的 Selector，好多人以为这个事会比较快，其实并不一定。关键还看我们的 CSS 的 Selector 怎么写了。")]),t._v(" "),s("p",[s("strong",[t._v("注意：CSS 匹配 HTML 元素是一个相对复杂和有性能问题的事情。所以，你就会在N多地方看到很多人都告诉你，DOM 树要小，CSS 尽量用 id 和 class ，千万不要过度层叠下去......")])]),t._v(" "),s("p",[t._v("所以，Firefox 基本上来说是通过 CSS 解析生成 CSS Rule Tree，然后，通过对比 DOM 生成 Style Context Tree，然后 Firefox 通过把 Style Content Tree 和其 Render Tree（Frame Tree）关联上，就完成了。主要：Render Tree 会把一些不可见的节点去除掉。而 "),s("strong",[t._v("Firefox 中所谓的 Frame就是一个DOM节点，不要被其名字所迷惑了")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/06/03/tFjHvRyMh9JZ6lY.png",alt:"Firefox-style-context-tree"}})]),t._v(" "),s("p",[t._v("注：Webkit不像Firefox要用两个树来干这个，Webkit也有Style对象，它直接把这个Style对象存在了相应的DOM结点上了")]),t._v(" "),s("h2",{attrs:{id:"渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染"}},[t._v("#")]),t._v(" 渲染")]),t._v(" "),s("p",[t._v("渲染的流程基本上如下（黄色的四个步骤）：")]),t._v(" "),s("ol",[s("li",[t._v("计算 CSS 样式")]),t._v(" "),s("li",[t._v("构建 Render Tree")]),t._v(" "),s("li",[t._v("Layout - 定位坐标和大小，是否换行，各种 position，overflow，z-index 属性...")]),t._v(" "),s("li",[t._v("正式绘制")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2021/06/03/oMqHztC1QaLw4U3.jpg",alt:"Firefox-style-context-tree"}})]),t._v(" "),s("p",[t._v("注意：上图流程中有很多连接线，这表示了 JavaScript 动态修改了 DOM 属性或时 CSS 属性会导致重新 Layout，有些改变不会，就是那些指到天上的箭头，比如，修改后的 CSS rule 没有被匹配到等")]),t._v(" "),s("p",[t._v("这里重要说两个概念，一个是 Repaint ，另一个是 Reflow，这两个不是一回事")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Repaint——屏幕的一部分要重画，比如某个 CSS 的背景色变了。但是元素的集合尺寸没有变")])]),t._v(" "),s("li",[s("p",[t._v("Reflow——意味着元件的几何尺寸变了，我们需要重新验证并计算 Render Tree。是 Render Tree 的一部分或全部发生了变化。这就是 Reflow，或是 Layout（HTML 使用的是 flow based layout，也就是流式布局，所以，如果某元件的几何尺寸发生了变化，需要重更新布局，也就叫 Reflow）。Reflow 会从"),s("code",[t._v("<html>")]),t._v(" 这个 root frame 开始递归往下，一次计算所有的结点几何尺寸和位置，在 Reflow 过程中，可能会增加一些 frame，比如一个文本字符串必须被包装起来")])])]),t._v(" "),s("p",[t._v("总之，Reflow 的成本比 Repaint 的成本高得多。DOM Tree 里的每个节点都会有 Reflow 方法，一个节点的 Reflow 很有可能导致子节点，甚至父点以及同级节点的 Reflow")]),t._v(" "),s("p",[t._v("所以，以下动作很大可能会是成本比较高的：")]),t._v(" "),s("ul",[s("li",[t._v("当你增加、删除、修改DOM节点时，会导致 Reflow 或 Repaint")]),t._v(" "),s("li",[t._v("当你移动 DOM 的位置，或时搞个动画的时候")]),t._v(" "),s("li",[t._v("当你修改 CSS 样式的时候")]),t._v(" "),s("li",[t._v("当你 Resize 窗口的时候（移动端没有这个问题），或是滚动的时候")]),t._v(" "),s("li",[t._v("当你修改网页的默认字体时")])]),t._v(" "),s("p",[t._v("注：display:none 会触发 Reflow，而 visibility: hidden 只会触发 Repaint，因为没有发现位置变化")]),t._v(" "),s("p",[t._v("我们的浏览器时聪明的，它会把修改的操作积攒一批，然后做一次 Reflow，这叫做异步 Reflow 或增量异步 Reflow。但有些情况浏览器不会这样做，比如：resize 窗口、改变了页面某人的字体等。对于这些操作，浏览器会马上进行 Reflow")]),t._v(" "),s("h2",{attrs:{id:"减少reflow-回流-repaint-重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#减少reflow-回流-repaint-重绘"}},[t._v("#")]),t._v(" 减少reflow（回流）/repaint（重绘）")]),t._v(" "),s("p",[t._v("下面时一些 Best Practices:")]),t._v(" "),s("p",[s("strong",[t._v("1) 不要一条一条地修改 DOM 的样式。与其这样，不如预先定义好 CSS 的class，然后修改 DOM 的 className")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bad")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" top "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" top "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Good")]),t._v("\nel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"theclassname"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Good")]),t._v("\nel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('";left:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px;top:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" top "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px;"')]),t._v("\n")])])]),s("p",[s("strong",[t._v('2) 把 DOM "离线"后修改。如:')])]),t._v(" "),s("ul",[s("li",[t._v("使用 documentFragment 对象在内存里操作 DOM")]),t._v(" "),s("li",[t._v("先把 DOM 给 display：none（有一次 Reflow），然后你想怎么改就怎么改。比如修改 100 次，然后再把它显示出来")]),t._v(" "),s("li",[t._v("clone 一个 DOM 节点到内存里，然后想怎么改就怎么改，改完后，和在线的那个交换一下")])]),t._v(" "),s("p",[t._v("**3）不要把 DOM 节点的属性值放在一个循环里当作循环的变量。**不然这会导致大量地读写这个节点的属性")]),t._v(" "),s("p",[s("strong",[t._v("4）尽可能地修改层级比较低的DOM")]),t._v("。当然，改变层级比较底的 DOM 也有可能造成大面积的 Reflow，但是也可能影响范围很小")]),t._v(" "),s("p",[s("strong",[t._v("5）为动画的 HTML 元件使用 fixed 或 absolute 的 position")]),t._v("，那么修改它们的 CSS 是不会 Reflow 的")]),t._v(" "),s("p",[t._v("**6）千万不要使用 table 布局。**因为可能很小的一个改动会造成整个 table 的重新布局")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("浏览器渲染三个步骤，解析，渲染，绘制")]),t._v(" "),s("p",[t._v("解析：三种语言都要分析，HTML 被解析为 DOM 树，CSS 被解析成 CSS 规则树，JavaScript 通过 DOM API 和 CSSOM API 来操作 DOM Tree 和 CSS Rule Tree")]),t._v(" "),s("p",[t._v("渲染：浏览器引擎通过 DOM Tree 和 CSS Rule Tree 构建 Rendering Tree（渲染树），这其中进行大量的 Reflow 和 Repaint")]),t._v(" "),s("p",[t._v("绘制：最后调用操作系统的 Native GUI 的 API 绘制")]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://coolshell.cn/articles/9666.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的渲染原理简介"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg5NDEyMzA2NQ==&mid=2247484400&idx=1&sn=9c7d4b7f346034fd06e2a587cb9c58cf&chksm=c0252ea6f752a7b06e0e6ba4346581fbe864ec769963ffa6cf4b0c7204f4afb0ddb44a76e6cd&mpshare=1&scene=1&srcid=1008vvgoRuGQgyy1MwuzlS8T&sharer_sharetime=1570506760100&sharer_shareid=778ad5bf3b27e0078eb105d7277263f6#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解现代浏览器"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/96986818?tdsourcetag=s_pctim_aiomsg",target:"_blank",rel:"noopener noreferrer"}},[t._v("万字详文：深入理解浏览器原理"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA4ODUzNTE2Nw==&mid=2451046766&idx=1&sn=4d9177602ebd278bfa5c5bc959598b73&chksm=87c4187eb0b3916869bc64d39e7b3c6e59bb2c5fe2789d9a888be2cb6cda4c7cc4ff05d99e8b&mpshare=1&scene=1&srcid=&sharer_sharetime=1583904346478&sharer_shareid=778ad5bf3b27e0078eb105d7277263f6#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("现代浏览器内部工作原理（附详细流程图）"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000022633988",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端都该懂的浏览器工作原理"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=n.exports}}]);